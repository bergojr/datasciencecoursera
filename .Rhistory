#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
print(c(hosp, " ", estado.sigla))
selecao <- c(hosp,estado.sigla)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
print(c(hosp, " ", estado.sigla))
selecao <- as.data.frame(c(hosp,estado.sigla))
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
print(c(hosp, " ", estado.sigla))
selecao <- as.data.frame(c(hosp,estado.sigla))
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
selecao <- as.data.frame(c(hosp,estado.sigla))
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
selecao[1,1] <-hosp
selecao[1,2] <- estado.sigla
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
selecao <- data.frame()
resultado <- data.frame()
#dados.selecionados <- dados[dados$State = state]
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
hosp <-(estado.ordenado[num,"Hospital"])
estado.sigla <- estado$State[1]
selecao[1,1] <-hosp
selecao[1,2] <- estado.sigla
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
dados <- outcomes[, c(2,6,7,11,17,23)]
dados[,c(4,5,6)] <-lapply(dados[,c(4,5,6)], as.numeric)
valid.outcome <- c("heartattack", "heartfailure", "pneumonia")
names(dados) <- c("Hospital","City","State", valid.outcome)
selecao <- data.frame()
resultado <- data.frame()
#dados.selecionados <- dados[dados$State = state]
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
selecao[1,1] <-(estado.ordenado[num,"Hospital"])
selecao[1,2] <- estado$State[1]
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
resultado <- rbind(resultado, pior)
}else{
#print(estado$State[1])
#selecao <- estado.ordenado[num,c("Hospital","State")]
#selecao <- c(estado.ordenado[num,"Hospital"],estado$State[1])
selecao[1,1] <-(estado.ordenado[num,"Hospital"])
selecao[1,2] <- estado$State[1]
print(selecao)
resultado <- rbind(resultado, selecao)
}
}
names(resultado) <- c("hospital","state")
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
#melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
melhor[1,1] <-(estado.ordenado[1,"Hospital"])
melhor[1,2] <- estado$State[1]
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
#pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
pior[1,1] <-(estado.ordenado[numlinhas,"Hospital"])
pior[1,2] <- estado$State[1]
resultado <- rbind(resultado, pior)
}else{
selecao[1,1] <-(estado.ordenado[num,"Hospital"])
selecao[1,2] <- estado$State[1]
resultado <- rbind(resultado, selecao)
}
}
names(resultado) <- c("hospital","state")
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heartattack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
dados <- outcomes[, c(2,6,7,11,17,23)]
dados[,c(4,5,6)] <-lapply(dados[,c(4,5,6)], as.numeric)
valid.outcome <- c("heartattack", "heartfailure", "pneumonia")
names(dados) <- c("Hospital","City","State", valid.outcome)
melhor <- data.frame()
pior<- data.frame()
selecao <- data.frame()
resultado <- data.frame()
#dados.selecionados <- dados[dados$State = state]
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
outcome.selecionado <- cbind(dados[,1:3],dados[outcome])
outcome.valido <- complete.cases(outcome.selecionado)
outcome.valido <- outcome.selecionado[outcome.valido,]
dados.por.estado <- split(outcome.valido,outcome.valido$State)
for (estado in dados.por.estado){
estado.ordenado <- estado[order(estado[outcome],estado["Hospital"]),]
numlinhas <- nrow(estado.ordenado)
#print(numlinhas)
if(num == "best"){
#melhor <- estado.ordenado[1,c("Hospital","State")]
#melhor <- c(estado.ordenado[1,"Hospital"],estado$State)
melhor[1,1] <-(estado.ordenado[1,"Hospital"])
melhor[1,2] <- estado$State[1]
resultado <- rbind(resultado, melhor)
} else if( num == "worst"){
#pior <- estado.ordenado[numlinhas,c("Hospital","State")]
#pior <- c(estado.ordenado[numlinhas,"Hospital"],estado$State)
pior[1,1] <-(estado.ordenado[numlinhas,"Hospital"])
pior[1,2] <- estado$State[1]
resultado <- rbind(resultado, pior)
}else{
selecao[1,1] <-(estado.ordenado[num,"Hospital"])
selecao[1,2] <- estado$State[1]
resultado <- rbind(resultado, selecao)
}
}
names(resultado) <- c("hospital","state")
resultado
#estado
#for(tabela in teste2){print(tabela[,c(4:6)])}
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heartfailure"), 10)
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#grep("Heart.Failure", nome.colunas) # função que retorna um vetor contendo as posições
# onde a substring foi encontrada
dados <- outcomes[, c(2,6,7,11,17,23)]
dados[,c(4,5,6)] <-lapply(dados[,c(4,5,6)], as.numeric)
valid.outcome <- c("heartattack", "heartfailure", "pneumonia")
names(dados) <- c("Hospital","City","State", valid.outcome)
#dados.selecionados <- dados[dados$State = state]
best <- function(state, outcome){
## Read outcome data
# dados disponibilizados um nível acima para facilitar exercício
## Check that state and outcome are valid
#a função validestateoutcome vai receber o estado e o problema (outcome) selecionado
# verifica se são válidos ambos e caso positivo retorna uma lista com todos os
#hospitais e problemas do estado.
dados.estado.selecionado <- validatestateoutcome(state,outcome)
# a função stateoutcomefilter recebe o problema (outcome) e a lista de hospitais
# do estado selecionado, devolvendo uma lista de casos completos (sem NA) dos
# hospitais do estado selecionado
dados.filtrados <- stateoutcomefilter(outcome,dados.estado.selecionado)
dados.filtrados.ordenados <- dados.filtrados[order(dados.filtrados[outcome],dados.filtrados["Hospital"]),]
dados.filtrados.ordenados[1,"Hospital"]  # Saída correta
#dados.filtrados.ordenados #saida para teste
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
# dados disponibilizados um nível acima para facilitar exercício
## Check that state and outcome are valid
dados.estado.selecionado <- validatestateoutcome(state,outcome)
## Return hospital name in that state with the given rank
## 30-day death rate
dados.filtrados <- stateoutcomefilter(outcome, dados.estado.selecionado)
dados.filtrados.ordenados <- dados.filtrados[order(dados.filtrados[outcome],dados.filtrados["Hospital"]),]
numlinhas <- nrow(dados.filtrados)
rankeamento <- 1:numlinhas
dados.rankeados <- cbind(dados.filtrados.ordenados,rankeamento)
names(dados.rankeados) <- c("Hospital.name", "Rate","Rank")
melhorhospital <- min(dados.rankeados$Rank)
piorhospital <- max(dados.rankeados$Rank)
if (num == "best"){
return(dados.rankeados[1,1])
} else if (num == "worst"){
return(dados.rankeados[numlinhas,1])
} else if (num < melhorhospital || num > piorhospital ){
return(NA)
} else{
return(dados.rankeados[num,1])
}
}
validatestateoutcome <- function(state, outcome){
estado.selecionado <- dados$State == state
dados.estado.selecionado <- dados[estado.selecionado,]
if (!any(estado.selecionado)){
print("Estado selecionado não existe na base de dados!!!")
break
}
problema.selecionado <- valid.outcome == outcome
if(!any(problema.selecionado)){
print("Problema selecionado não é válido!!!")
break
}
return(dados.estado.selecionado)
}
stateoutcomefilter <- function(outcome, dados.estado.selecionado ){
hospital.outcome <- dados.estado.selecionado[,names(dados.estado.selecionado)%in% c("Hospital", outcome)]
hospital.outcome.validos <- complete.cases(hospital.outcome)
dados.filtrados<- hospital.outcome[hospital.outcome.validos, c("Hospital", outcome)]
return(dados.filtrados)
}
best("SC", "heartattack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heartattack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("WA", "heartattack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heartattack", 7)
r <- rankall("heartattack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
